// This file has been autogenerated using CoD4X 1.8 server. //
// If it contains wrong data, please create issue here:     //
//    https://github.com/callofduty4x/CoD4x_Server/issues   //
/*===================================================================||
||88888888888        ad888888b,  ad888888b,                88        ||
||88                d8"     "88 d8"     "88                88   ,d   ||
||88                        a8P         a8P                88   88   ||
||88aaaaa 8b,dPPYba,     aad8"       aad8"   ,adPPYb,d8    88 MM88MMM||
||88""""" 88P'   "Y8     ""Y8,       ""Y8,  a8"    `Y88    88   88   ||
||88      88                "8b         "8b 8b       88    ""   88   ||
||88      88        Y8,     a88 Y8,     a88 "8a,   ,d88    aa   88,  ||
||88      88         "Y888888P'  "Y888888P'  `"YbbdP"Y8    88   "Y888||
||                                           aa,    ,88              ||
||                                           "Y8bbdP"           ||
||===================================================================||
||     DO NOT USE, SHARE OR MODIFY THIS FILE WITHOUT PERMISSION      ||
||===================================================================*/
#include maps\mp\_utility;
#include common_scripts\utility;

init() {
    level.cj_block_clienthud = 0;
}

waitHudRefresh(){
  self endon("disconnect");
  if(self.pers["team"] != "spectator")
    self thread playerHUDLoop();

  while(1){
    self waittill("refresh_huds");
    if(self.pers["team"] != "spectator")
      self thread playerHUDLoop();
  }
}

setupDefaults(){
    self waittill("spawned");
    while(!isDefined(self.cj) || !isDefined(self.cj["hud"])) wait 0.05;

    self.client_fps = 1337;

    self.cj_block_clienthud = 0;

    self thread waitHudRefresh();
    self thread updateClientVars();
}


updateClientVars() {
  self endon("disconnect");
  for (;;) {
      wait .05;
      self.client_fps = getDvarInt("com_maxfps") ;
      self.assists = self.client_fps;
  }
}

hudGlow(){
    self.color = (0.8, 1.0, 0.8);
    self.font = "default";
    self.glowColor = (0,116,200);
    self.glowAlpha = 1;
}

updateHUDonChange(oldvalue, newvalue, hudElement){
  if(isDefined(hudElement) && oldvalue != newvalue){
    hudElement setValue(newvalue);
  }
  return newvalue;
}

destroyPlayerHUDs(){
  self endon( "disconnect" );

  if (isDefined(self.cj["hud"]["fps"]))
    self.cj["hud"]["fps"] thread FadeOut(0.2);
}

playerHUDLoop(){
  self endon( "disconnect" );
  self endon( "joined_spectators" );
  self endon( "refresh_huds");

  self destroyPlayerHUDs();

  if(level.cj_block_clienthud || self.cj_block_clienthud) return;

  if(self codjumper\_cj_utility::get_cjcfg("CJ_HUD_FPS_CLIENT") == 1){
    self.cj["hud"]["fps"] = addTextHud(self, -3, 0, 1 , "right", "top", "right","top",1.4,0);
    self.cj["hud"]["fps"] hudGlow();
    self.cj["hud"]["fps"] setValue(self.client_fps);
  }

  last_fps = self.client_fps;

  while(1){
    while(last_fps == self.client_fps){
      wait .05;
    }

    last_fps = self updateHUDonChange(last_fps     , self.client_fps        , self.cj["hud"]["fps"]);
    wait 0.05;
  }
}

addTextHud( who, x, y, alpha, alignX, alignY, horiz, vert, fontScale, sort ) {
	if( isPlayer( who ) )
		hud = newClientHudElem( who );
	else
		hud = newHudElem();

	hud.x = x;
	hud.y = y;
	hud.alpha = alpha;
	hud.sort = sort;
	hud.alignX = alignX;
	hud.alignY = alignY;
	if(isdefined(vert))
		hud.vertAlign = vert;
	if(isdefined(horiz))
		hud.horzAlign = horiz;
	if(fontScale != 0)
		hud.fontScale = fontScale;
	hud.foreground = 1;
	hud.archived = 0;
	return hud;
}

fadeOut(time) {
	if(!isDefined(self)) return;
	self fadeOverTime(time);
	self.alpha = 0;
	wait time;
	if(!isDefined(self)) return;
	self destroy();
}
